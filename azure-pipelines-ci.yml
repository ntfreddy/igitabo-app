# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript


name: $(Build.DefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - src
    exclude:
    - azure-pipelines-ci.yml
    - README.md
    - scripts

pool:
  vmImage: ubuntu-latest

variables:
  versionNumber: $(Get-Date -Format yyyy.MM.ddhhmmss)
  buildNumber: $(Build.BuildId)
  configFile: '$(System.DefaultWorkingDirectory)/config.xml'
  cordovaVersionScript: '$(System.DefaultWorkingDirectory)/scripts/Set-CordovaVersion.ps1'
  convertBase64StringToFileScript: '$(System.DefaultWorkingDirectory)/scripts/Convert-Base64StringToFile.ps1'
  keystoreFile: 'release.keystore'
  configuration: 'Release' #Debug

steps:
- task: PowerShell@2
  displayName: 'Set Version and Version Code'
  inputs:
    filePath: $(cordovaVersionScript)
    arguments: >
       -VersionNumber $(versionNumber)
       -BuildNumber $(buildNumber)
       -ConfigFile $(configFile)
- task: NodeTool@0
  inputs:
    versionSpec: '14.15.x'
  displayName: 'Install Node.js'
- task: CmdLine@2
  displayName: 'npm install and build'
  inputs:
    script: 'npm install'
- task: CmdLine@2
  displayName: 'Installation of cordova and Android platform'
  inputs:
    script: |
        npm install -g cordova@11.0.0
        cordova platform add android@9.1.0
- task: CmdLine@2
  displayName: 'Configuring Java SDK'
  inputs:
    script: |
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        sudo update-alternatives --set java /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64/bin/java
        sudo update-alternatives --set javac  /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64/bin/javac
- task: PowerShell@2
  displayName: 'Retrieve keystore from Base64 string'
  inputs:
    filePath: $(convertBase64StringToFileScript)
    arguments: >
       -Base64String ${env:KEYSTOREBASE64}
       -File $(keystoreFile)
- task: CordovaBuild@1
  inputs:
    platform: 'Build android'
    configuration: '$(configuration)'
    archs: 'arm'
    keystoreFile: '$(keystoreFile)'
    keystorePass: '(keystorePassword)'
    keystoreAlias: '$(keystoreFile)'
    keyPass: '(keystorePassword)'
    outputPattern: 'bin'
#- task: CmdLine@2
#  displayName: 'Generating Android Apps'
#  inputs:
#    script: |
#        cordova build android --release
#        cordova build android --debug

#- task: AndroidSigning@3
#  displayName: 'Signing apk'
#  inputs:
#    apkFiles: '**/*.apk'
#    apksignerKeystoreFile: $(keystoreFile)
#    apksignerKeystorePassword: $(keystorePassword)
#    apksignerKeystoreAlias: $(keystoreFile)
#    apksignerKeyPassword: $(keystorePassword)
- task: CopyFiles@2
  displayName: 'Copying Android App as Artifact'
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)'
    Contents: '**/*.apk'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    overWrite: false
    flattenFolders: false
    preserveTimestamp: true
- task: PublishBuildArtifacts@1
  displayName: 'Publish build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'